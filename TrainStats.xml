<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, February 18, 2019, 2:51 PM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "TrainStats" generated by Plugin Wizard -->

<muclient>
<plugin
   name="TrainStats"
   id="e82976788e1ad7b9e7d18770"
   language="Lua"
   purpose="train stats... Fast"
   save_state="y"
   date_written="2019-02-18 14:50:12"
   requires="5.06"
   version="1.0"
   >
<description trim="y">
<![CDATA[
text
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Variables  -->
 
<variables>
</variables>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="trainstats"
   match="You have * practice sessions available."
   send_to="12"
   sequence="100"
  >
  <send>
  train_convert = GetVariable("train_convert") or 0
  practtotal = tonumber("%1")
SetVariable("practtotal", practtotal)
if (practtotal &gt;= 10) and (train_convert == "1") then
Execute ("gain convertall")
traintotal = (traintotal + math.floor(practtotal/10))
else
end
</send>
  </trigger>
    <trigger
   enabled="y"
   group="trainstats"
   match="You have 1 practice session available."
   send_to="12"
   sequence="100"
  >
  <send>practtotal = "1"
SetVariable("practtotal", practtotal)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="trainstats"
   match="You have * training sessions available."
   send_to="12"
   sequence="100"
  >
  <send>traintotal = tonumber(%1)
SetVariable("traintotal", traintotal)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="trainstats"
   match="You have * total stats out of * maximum."
   send_to="12"
   sequence="100"
  >
  <send> 
local train_str = tonumber(GetVariable("train_str"))
local train_int = tonumber(GetVariable("train_int"))
train_wis = tonumber(GetVariable("train_wis"))
train_dex = tonumber(GetVariable("train_dex"))
train_con = tonumber(GetVariable("train_con"))
train_luck = tonumber(GetVariable("train_luck"))
local train_strmax = tonumber(GetVariable("train_strmax"))
local train_intmax = tonumber(GetVariable("train_intmax"))
train_wismax = tonumber(GetVariable("train_wismax"))
train_dexmax = tonumber(GetVariable("train_dexmax"))
train_conmax = tonumber(GetVariable("train_conmax"))
train_luckmax = tonumber(GetVariable("train_luckmax"))
Strengthcurrent = tonumber(GetVariable("Strengthcurrent"))
Strengthmax = tonumber(GetVariable("Strengthmax"))
Strengthcost = tonumber(GetVariable("Strengthcost"))
Intelligencecurrent = tonumber(GetVariable("Intelligencecurrent"))
Intelligencemax = tonumber(GetVariable("Intelligencemax"))
Intelligencecost = tonumber(GetVariable("Intelligencecost"))
Luckcurrent = tonumber(GetVariable("Luckcurrent"))
Luckmax = tonumber(GetVariable("Luckmax"))
Luckcost = tonumber(GetVariable("Luckcost"))
Dexteritycurrent = tonumber(GetVariable("Dexteritycurrent"))
Dexteritymax = tonumber(GetVariable("Dexteritymax"))
Dexteritycost = tonumber(GetVariable("Dexteritycost"))
Wisdomcurrent = tonumber(GetVariable("Wisdomcurrent"))
Wisdommax = tonumber(GetVariable("Wisdommax"))
Wisdomcost = tonumber(GetVariable("Wisdomcost"))
Constitutioncurrent = tonumber(GetVariable("Constitutioncurrent"))
Constitutionmax = tonumber(GetVariable("Constitutionmax"))
Constitutioncost = tonumber(GetVariable("Constitutioncost"))
  
if ((Strengthmax - Strengthcurrent) &gt;= 1)

	and
	((train_strmax - Strengthcurrent) &gt;= 1) 
			and 
			(traintotal &gt; 0)
				and
					traintotal &gt;= (Strengthcost * train_str)
					
					and
						((Strengthcurrent + train_str) &lt;= Strengthmax)
						
then
	Execute ("train " .. train_str .. " str")
	SetVariable("traintotal", traintotal - (Strengthcost * train_str))
	traintotal= (traintotal - (Strengthcost * train_str))
end
if ((Dexteritymax - Dexteritycurrent) &gt;= 1)
	and
	((train_dexmax - Dexteritycurrent) &gt;= 1) 
			and 
			((traintotal - 0 ) &gt; 0)
				and 
				traintotal &gt;= (Dexteritycost * train_dex )
					and
					((Dexteritycurrent + train_dex) &lt;= Dexteritymax)
then
	Execute ("train " .. train_dex .. " Dex")
	SetVariable("traintotal", traintotal - (Dexteritycost * train_dex))
	traintotal= (traintotal - (Dexteritycost * train_dex))
end
if ((Luckmax - Luckcurrent) &gt;= 1)
	and 
	((train_luckmax - Luckcurrent) &gt;= 1)
			and
			(traintotal &gt; 0)
				and
				traintotal &gt;= (Luckcost * train_luck)
					and
					(Luckcurrent + train_luck) &lt;= Luckmax
then
	Execute ("train " .. train_luck .. " luck")
	SetVariable("traintotal", traintotal - (Luckcost * train_luck))
	traintotal= (traintotal - (Luckcost * train_luck))
end
if ((Wisdommax - Wisdomcurrent) &gt;= 1)
	and
	((train_wismax - Wisdomcurrent) &gt;= 1)
		and
		(traintotal &gt; 0)
			and
			traintotal &gt;= (Wisdomcost * train_wis)
				and
				(Wisdomcurrent + train_wis) &lt;= Wisdommax
then
	Execute ("train " .. train_wis .. " wis")
	SetVariable("traintotal", traintotal - (Wisdomcost * train_wis))
	traintotal= (traintotal - (Wisdomcost * train_wis))
end
if ((Constitutionmax - Constitutioncurrent) &gt;= 1)
	and
	((train_conmax - Constitutioncurrent) &gt;= 1)
		and
		(traintotal &gt; 0)
			and
			traintotal &gt;= (Constitutioncost * train_con)
				and
				(Constitutioncurrent + train_con) &lt;= Constitutionmax
then
	Execute ("train " .. train_con .. " con")
	SetVariable("traintotal", traintotal - (Constitutioncost * train_con))
	traintotal= (traintotal - (Constitutioncost * train_con))
end
if ((Intelligencemax - Intelligencecurrent) &gt;= 1)
	and 
	((train_intmax - Intelligencecurrent) &gt;= 1)
			and
			(traintotal &gt; 0)
				and 
				(traintotal &gt;= (Intelligencecost * train_int))
				and
						(Intelligencecurrent + train_int) &lt;= Intelligencemax
then
	Execute ("train " .. train_int .. " int")
	SetVariable("traintotal", traintotal - (Intelligencecost * train_int))
	traintotal= (traintotal - (Intelligencecost * train_int))
end
if (Strengthcurrent &lt; Strengthmax)
	and
	(Strengthcurrent &lt; train_strmax)  
			and 
			(traintotal &gt; 0)
				and
				(traintotal &gt;= (Strengthcost * train_str))
				and
					(Strengthcurrent + train_str) &lt;= Strengthmax
	or
	(Dexteritycurrent &lt; Dexteritymax)
	and
	(Dexteritycurrent &lt; train_dexmax)
			and 
			((traintotal - 0 ) &gt; 0)
				and 
				traintotal &gt;= (Dexteritycost * train_dex )
					and
					(Dexteritycurrent + train_dex) &lt;= Dexteritymax
	or
	(Luckcurrent &lt; Luckmax)
	and 
	(Luckcurrent &lt; train_luckmax)
			and
			(traintotal &gt; 0)
				and
				traintotal &gt;= (Luckcost * train_luck)
					and
					(Luckcurrent + train_luck) &lt; Luckmax
	or
	(Wisdomcurrent &lt; Wisdommax)
	and
	(Wisdomcurrent &lt; train_wismax)
			and
			(traintotal &gt; 0)
				and
				traintotal &gt;= (Wisdomcost * train_wis)
					and
					(Wisdomcurrent + train_wis) &lt;= Wisdommax
	or
	(Constitutioncurrent &lt; Constitutionmax)
	and
	(Constitutioncurrent &lt; train_wismax)
			and
			(traintotal &gt; 0)
				and
				traintotal &gt;= (Constitutioncost * train_con)
					and
					(Constitutioncurrent + train_con) &lt;= Constitutionmax
	or
	((Intelligencemax - Intelligencecurrent) &gt;= 1)
	and 
	(Intelligencecurrent &lt; train_intmax)
			and
			(traintotal &gt; 0)
				and 
				traintotal &gt;= (Intelligencecost * train_int)
					and
					(Intelligencecurrent + train_int) &lt;= Intelligencemax
then
	Execute ("train")
	else
	EnableTriggerGroup("trainstats",0)
	print("you can't train any more")
end

</send>
  </trigger>
    <trigger
   enabled="y"
   match="^(Strength|Intelligence|Wisdom|Dexterity|Constitution|Luck) +\: +([0-9]+) +-?([0-9]+) +-?([0-9]+) +-?([0-9]+) +([0-9]+) +([0-9]+) +([0-9]+)+\*?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("%1current", tonumber(%7))
%1current=GetVariable("%1current")
SetVariable("%1max", tonumber(%8))
%1max=GetVariable("%1max")
SetVariable("%1cost", tonumber(%6))
%1cost=GetVariable("%1cost")
</send>
  </trigger>
  <trigger
   enabled="y"
   send_to="12"
   group="trainstats"
   match="You have 1 training session available."
   sequence="100"
  >
  <send>traintotal=1
SetVariable("traintotal", tonumber(traintotal))</send>
  </trigger>
    <trigger
   enabled="y"
   send_to="12"
   group="trainstats"
   match="There is nobody here to train you."
   sequence="100"
  >
  <send>EnableTriggerGroup("trainstats",0)</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="trainstats"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup("trainstats",1)
Execute("train")</send>
  </alias>
  <alias
   match="trainstatus"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>
  train_convert = GetVariable("train_convert")
print("Train Helper Settings")
print("")
print("Auto convert practs "..train_convert)
print("")
print("train_str set to " .. train_str)
print("train_strmax set to " .. train_strmax)
print("")
print("train_int set to " .. train_int)
print("train_intmax set to " .. train_intmax)
print("")
print("train_wis set to " .. train_wis)
print("train_wismax set to " .. train_wismax)
print("")
print("train_dex set to " .. train_dex)
print("train_dexmax set to " .. train_dexmax)
print("")
print("train_con set to " .. train_con)
print("train_conmax set to " .. train_conmax)
print("")
print("train_luck set to " .. train_luck)
print("train_luckmax set to " .. train_luckmax)
print("")</send>
  </alias>
    <alias
   match="trainsetup"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_str = 1
SetVariable("train_str", tonumber(train_str))
train_int = 1
SetVariable("train_int", tonumber(train_int))
train_wis = 1
SetVariable("train_wis", tonumber(train_wis))
train_dex = 1
SetVariable("train_dex", tonumber(train_dex))
train_con = 1
SetVariable("train_con", tonumber(train_con))
train_luck = 1
SetVariable("train_luck", tonumber(train_luck))
train_strmax = 201
SetVariable("train_strmax", tonumber(train_strmax))
train_intmax = 201
SetVariable("train_intmax", tonumber(train_intmax))
train_wismax = 201
SetVariable("train_wismax", tonumber(train_wismax))
train_dexmax = 201
SetVariable("train_dexmax", tonumber(train_dexmax))
train_conmax = 201
SetVariable("train_conmax", tonumber(train_conmax))
train_luckmax = 201
SetVariable("train_luckmax", tonumber(train_luckmax))
Execute("trainstatus")
</send>
  </alias>
      <alias
   match="trainstr *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_str = "%1"
SetVariable("train_str", train_str)
print("train_str set to " .. train_str)</send>
  </alias>
      <alias
   match="trainint *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_int = "%1"
SetVariable("train_int", train_int)
print("train_int set to " .. train_int)</send>
  </alias>
      <alias
   match="trainwis *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_wis = "%1"
SetVariable("train_wis", train_wis)
print("train_wis set to " .. train_wis)</send>
  </alias>
      <alias
   match="traindex *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_dex = "%1"
SetVariable("train_dex", train_dex)
print("train_dex set to " .. train_dex)</send>
  </alias>
      <alias
   match="traincon *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_con = "%1"
SetVariable("train_con", train_con)
print("train_con set to " .. train_con)</send>
  </alias>
      <alias
   match="trainluck *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_luck = "%1"
SetVariable("train_luck", train_luck)
print("train_luck set to " .. train_luck)</send>
  </alias>
  
      <alias
   match="trainstrmax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_strmax = "%1"
SetVariable("train_strmax", tonumber(train_strmax))
print("train_strmax set to " .. train_strmax)</send>
  </alias>
      <alias
   match="trainintmax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_intmax = "%1"
SetVariable("train_intmax", tonumber(train_intmax))
print("train_intmax set to " .. train_intmax)</send>
  </alias>
      <alias
   match="trainwismax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_wismax = "%1"
SetVariable("train_wismax", tonumber(train_wismax))
print("train_wismax set to " .. train_wismax)</send>
  </alias>
      <alias
   match="traindexmax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_dexmax = "%1"
SetVariable("train_dexmax", tonumber(train_dexmax))
print("train_dexmax set to " .. train_dexmax)</send>
  </alias>
      <alias
   match="trainconmax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_conmax = "%1"
SetVariable("train_conmax", tonumber(train_conmax))
print("train_conmax set to " .. train_conmax)</send>
  </alias>
      <alias
   match="trainluckmax *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>train_luckmax = "%1"
SetVariable("train_luckmax", tonumber(train_luckmax))
print("train_luckmax set to " .. train_luckmax)</send>
  </alias>
      <alias
   match="trainconvert"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>
local train_convert = GetVariable("train_convert") or "0"
if train_convert == "0" then
train_convert = "1"
SetVariable("train_convert", "1")
print("auto convert trains ON")
else
train_convert = "0"
SetVariable("train_convert", "0")
print("auto convert trains Off")
end
</send>
  </alias>
        <alias
   match="helptrains"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>print("train(stat) X    - to set how many of a stat to train")
  print("                         example: trainstr 10 will train 10 strength")
  print("")
  print("train(stat)max X - to set the max you want to train a stat")
  print("                   example: trainstrmax 100 will stop training strength once it reaches 100")
  print("")
  print("trainstats       - Attempt to train stats quickly")
  print("")
  print("trainstatus      - report your current set values to trian and maxes")
  print("")
  print("trainsetup       - set all values to 1 training per stat and 201 max")
  print("")
  print("trainconvert     - automaticly convert practices to trains")
  print("")</send>
  </alias>
  
</aliases>

<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="TrainStats:Help"
   send_to="12"
   enabled="y"
  >
  </alias>
  
</aliases>

<script>



<![CDATA[
train_str = GetVariable("train_str") or ""
train_int = GetVariable("train_int") or ""
train_wis = GetVariable("train_wis") or ""
train_dex = GetVariable("train_dex") or ""
train_con = GetVariable("train_con") or ""
train_luck = GetVariable("train_luck") or ""
train_strmax = GetVariable("train_strmax") or ""
train_intmax = GetVariable("train_intmax") or ""
train_wismax = GetVariable("train_wismax") or ""
train_dexmax = GetVariable("train_dexmax") or ""
train_conmax = GetVariable("train_conmax") or ""
train_luckmax = GetVariable("train_luckmax") or ""
train_convert = GetVariable("train_convert") or "0"

function OnPluginSaveState()
SetVariable("train_str", train_str)
SetVariable("train_int", train_int)
SetVariable("train_wis", train_wis)
SetVariable("train_dex", train_dex)
SetVariable("train_con", train_con)
SetVariable("train_luck", train_luck)
SetVariable("train_strmax", train_strmax)
SetVariable("train_intmax", train_intmax)
SetVariable("train_wismax", train_wismax)
SetVariable("train_dexmax", train_dexmax)
SetVariable("train_conmax", train_conmax)
SetVariable("train_luckmax", train_luckmax)
SetVariable("train_convert", train_convert)
end

EnableTriggerGroup("trainstats",0)
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
